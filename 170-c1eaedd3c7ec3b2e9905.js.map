{"version":3,"file":"170-c1eaedd3c7ec3b2e9905.js","mappings":"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","sources":["webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/node/group.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/m/create.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/components/m/proxy.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/features-max.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/features-min.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-motion-value-event.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-scroll.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-motion-template.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-time.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-computed.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-velocity.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion-config.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/wrap.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animate/resolve-subjects.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/utils/calc-repeat-duration.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/utils/normalize-times.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/sequence/create.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animate/subject.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animate/sequence.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animate/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/style.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-partial-keyframes.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/NativeAnimation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/animate-style.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/animators/waapi/animate-elements.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/hooks/use-animate-style.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence-data.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/is-motion-component.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/motion/utils/unwrap-motion-component.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/use-instant-layout-transition.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-cycle.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-in-view.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/store.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/optimized-appear/start.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/value/use-inverted-scale.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/context/ReorderContext.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/animation/utils/stagger.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/frameloop/index-legacy.mjs","webpack://icn-australia/./node_modules/framer-motion/dist/es/easing/steps.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { createContext } from 'react';\n\n/**\n * Note: Still used by components generated by old versions of Framer\n *\n * @deprecated\n */\nconst DeprecatedLayoutGroupContext = createContext(null);\n\nexport { DeprecatedLayoutGroupContext };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","const notify = (node) => !node.isLayoutDirty && node.willUpdate(false);\nfunction nodeGroup() {\n    const nodes = new Set();\n    const subscriptions = new WeakMap();\n    const dirtyAll = () => nodes.forEach(notify);\n    return {\n        add: (node) => {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: (node) => {\n            nodes.delete(node);\n            const unsubscribe = subscriptions.get(node);\n            if (unsubscribe) {\n                unsubscribe();\n                subscriptions.delete(node);\n            }\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nexport { nodeGroup };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inherit = true }) => {\n    const layoutGroupContext = useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = useRef(null);\n    const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? layoutGroupContext.group || nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = useMemo(() => ({ ...context.current, forceRender }), [key]);\n    return (jsx(LayoutGroupContext.Provider, { value: memoizedContext, children: children }));\n};\n\nexport { LayoutGroup };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [\n        JSON.stringify(config.transition),\n        config.transformPagePoint,\n        config.reducedMotion,\n    ]);\n    return (jsx(MotionConfigContext.Provider, { value: context, children: children }));\n}\n\nexport { MotionConfig };\n","import { createMotionComponentFactory } from '../create-factory.mjs';\n\nconst createMinimalMotionComponent = \n/*@__PURE__*/ createMotionComponentFactory();\n\nexport { createMinimalMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMinimalMotionComponent } from './create.mjs';\n\nconst m = /*@__PURE__*/ createDOMMotionComponentProxy(createMinimalMotionComponent);\n\nexport { m };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domMin = {\n    renderer: createDomVisualElement,\n    ...animations,\n};\n\nexport { domMin };\n","import { useInsertionEffect } from 'react';\n\nfunction useMotionValueEvent(value, event, callback) {\n    /**\n     * useInsertionEffect will create subscriptions before any other\n     * effects will run. Effects run upwards through the tree so it\n     * can be that binding a useLayoutEffect higher up the tree can\n     * miss changes from lower down the tree.\n     */\n    useInsertionEffect(() => value.on(event, callback), [value, event, callback]);\n}\n\nexport { useMotionValueEvent };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { resolveElements } from 'motion-dom';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { progress } from 'motion-utils';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","import { clamp } from '../../../../utils/clamp.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\nimport { calcInset } from './inset.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { ScrollOffset } from './presets.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = clamp(0, 1, info[axis].interpolate(info[axis].current));\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from '../../../utils/warn-once.mjs';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { supportsScrollTimeline } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { observeTimeline } from './observe.mjs';\nimport { scrollInfo } from './track.mjs';\n\nfunction scrollTimelineFallback({ source, container, axis = \"y\", }) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source, container = document.documentElement, axis = \"y\", } = {}) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    if (!timelineCache.has(container)) {\n        timelineCache.set(container, {});\n    }\n    const elementCache = timelineCache.get(container);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source: container, axis })\n            : scrollTimelineFallback({ source: container, axis });\n    }\n    return elementCache[axis];\n}\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\n/**\n * Currently, we only support element tracking with `scrollInfo`, though in\n * the future we can also offer ViewTimeline support.\n */\nfunction needsElementTracking(options) {\n    return options && (options.target || options.offset);\n}\nfunction scrollFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\nfunction scrollAnimation(animation, options) {\n    animation.flatten();\n    if (needsElementTracking(options)) {\n        animation.pause();\n        return scrollInfo((info) => {\n            animation.time = animation.duration * info[options.axis].progress;\n        }, options);\n    }\n    else {\n        const timeline = getTimeline(options);\n        if (animation.attachTimeline) {\n            return animation.attachTimeline(timeline, (valueAnimation) => {\n                valueAnimation.pause();\n                return observeTimeline((progress) => {\n                    valueAnimation.time = valueAnimation.duration * progress;\n                }, timeline);\n            });\n        }\n        else {\n            return noop;\n        }\n    }\n}\nfunction scroll(onScroll, { axis = \"y\", ...options } = {}) {\n    const optionsWithDefaults = { axis, ...options };\n    return typeof onScroll === \"function\"\n        ? scrollFunction(onScroll, optionsWithDefaults)\n        : scrollAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","import { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useEffect } from 'react';\nimport { warning } from 'motion-utils';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction refWarning(name, ref) {\n    warning(Boolean(!ref || ref.current), `You have defined a ${name} options but the provided ref is not yet hydrated, probably because it's defined higher up the tree. Try calling useScroll() in the same component as the ref, or setting its \\`layoutEffect: false\\` option.`);\n}\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useLifecycleEffect(() => {\n        refWarning(\"target\", target);\n        refWarning(\"container\", container);\n        return scroll((_progress, { x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, [container, target, JSON.stringify(options.offset)]);\n    return values;\n}\n\nexport { useScroll };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { useScroll } from '../use-scroll.mjs';\n\n/**\n * @deprecated useElementScroll is deprecated. Convert to useScroll({ container: ref })\n */\nfunction useElementScroll(ref) {\n    if (process.env.NODE_ENV === \"development\") {\n        warnOnce(false, \"useElementScroll is deprecated. Convert to useScroll({ container: ref }).\");\n    }\n    return useScroll({ container: ref });\n}\n\nexport { useElementScroll };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { useScroll } from '../use-scroll.mjs';\n\n/**\n * @deprecated useViewportScroll is deprecated. Convert to useScroll()\n */\nfunction useViewportScroll() {\n    if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(false, \"useViewportScroll is deprecated. Convert to useScroll().\");\n    }\n    return useScroll();\n}\n\nexport { useViewportScroll };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { useCombineMotionValues } from './use-combine-values.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value) {\n                output += isMotionValue(value) ? value.get() : value;\n            }\n        }\n        return output;\n    }\n    return useCombineMotionValues(values.filter(isMotionValue), buildValue);\n}\n\nexport { useMotionTemplate };\n","import { noop } from 'motion-utils';\nimport { useContext, useRef, useInsertionEffect } from 'react';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const initialValue = useConstant(() => isMotionValue(source) ? source.get() : source);\n    const unit = useConstant(() => typeof initialValue === \"string\"\n        ? initialValue.replace(/[\\d.-]/g, \"\")\n        : undefined);\n    const value = useMotionValue(initialValue);\n    const latestValue = useRef(initialValue);\n    const latestSetter = useRef(noop);\n    const startAnimation = () => {\n        stopAnimation();\n        activeSpringAnimation.current = animateValue({\n            keyframes: [asNumber(value.get()), asNumber(latestValue.current)],\n            velocity: value.getVelocity(),\n            type: \"spring\",\n            restDelta: 0.001,\n            restSpeed: 0.01,\n            ...config,\n            onUpdate: latestSetter.current,\n        });\n    };\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            if (isStatic)\n                return set(v);\n            latestValue.current = v;\n            latestSetter.current = (latest) => set(parseValue(latest, unit));\n            frame.postRender(startAnimation);\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseValue(v, unit)));\n        }\n    }, [value, unit]);\n    return value;\n}\nfunction parseValue(v, unit) {\n    return unit ? v + unit : v;\n}\nfunction asNumber(v) {\n    return typeof v === \"number\" ? v : parseFloat(v);\n}\n\nexport { useSpring };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = useRef(0);\n    const { isStatic } = useContext(MotionConfigContext);\n    useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp, delta }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current, delta);\n        };\n        frame.update(provideTimeSinceStart, true);\n        return () => cancelFrame(provideTimeSinceStart);\n    }, [callback]);\n}\n\nexport { useAnimationFrame };\n","import { useAnimationFrame } from '../utils/use-animation-frame.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useTime() {\n    const time = useMotionValue(0);\n    useAnimationFrame((t) => time.set(t));\n    return time;\n}\n\nexport { useTime };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    const updateVelocity = () => {\n        const latest = value.getVelocity();\n        velocity.set(latest);\n        /**\n         * If we still have velocity, schedule an update for the next frame\n         * to keep checking until it is zero.\n         */\n        if (latest)\n            frame.update(updateVelocity);\n    };\n    useMotionValueEvent(value, \"change\", () => {\n        // Schedule an update to this value at the end of the current frame.\n        frame.update(updateVelocity, false, true);\n    });\n    return velocity;\n}\n\nexport { useVelocity };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.values = [];\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (styleName) {\n            addUniqueItem(this.values, styleName);\n            this.update();\n        }\n    }\n    update() {\n        this.set(this.values.length ? this.values.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\n\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { useWillChange };\n","import { useState } from 'react';\nimport { initPrefersReducedMotion } from './index.mjs';\nimport { warnOnce } from '../warn-once.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasReducedMotionListener.current && initPrefersReducedMotion();\n    const [shouldReduceMotion] = useState(prefersReducedMotion.current);\n    if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n    }\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\n\nexport { useReducedMotion };\n","import { useContext } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { useReducedMotion } from './use-reduced-motion.mjs';\n\nfunction useReducedMotionConfig() {\n    const reducedMotionPreference = useReducedMotion();\n    const { reducedMotion } = useContext(MotionConfigContext);\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\nexport { useReducedMotionConfig };\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { resolveElements } from 'motion-dom';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\n\nfunction resolveSubjects(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && isDOMKeyframes(keyframes)) {\n        return resolveElements(subject, scope, selectorCache);\n    }\n    else if (subject instanceof NodeList) {\n        return Array.from(subject);\n    }\n    else if (Array.isArray(subject)) {\n        return subject;\n    }\n    else {\n        return [subject];\n    }\n}\n\nexport { resolveSubjects };\n","function calculateRepeatDuration(duration, repeat, _repeatDelay) {\n    return duration * (repeat + 1);\n}\n\nexport { calculateRepeatDuration };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","/**\n * Take an array of times that represent repeated keyframes. For instance\n * if we have original times of [0, 0.5, 1] then our repeated times will\n * be [0, 0.5, 1, 1, 1.5, 2]. Loop over the times and scale them back\n * down to a 0-1 scale.\n */\nfunction normalizeTimes(times, repeat) {\n    for (let i = 0; i < times.length; i++) {\n        times[i] = times[i] / (repeat + 1);\n    }\n}\n\nexport { normalizeTimes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { isGenerator, createGeneratorEasing } from 'motion-dom';\nimport { progress, secondsToMilliseconds, invariant } from 'motion-utils';\nimport { getEasingForSegment } from '../../easing/utils/get-easing-for-segment.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { resolveSubjects } from '../animate/resolve-subjects.mjs';\nimport { calculateRepeatDuration } from './utils/calc-repeat-duration.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { normalizeTimes } from './utils/normalize-times.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nconst MAX_REPEAT = 20;\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", repeat, repeatType, repeatDelay = 0, ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numSubjects)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = isGenerator(type)\n                ? type\n                : generators === null || generators === void 0 ? void 0 : generators[type];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Handle repeat options\n             */\n            if (repeat) {\n                invariant(repeat < MAX_REPEAT, \"Repeat count too high, must be less than 20\");\n                duration = calculateRepeatDuration(duration, repeat);\n                const originalKeyframes = [...valueKeyframesAsList];\n                const originalTimes = [...times];\n                ease = Array.isArray(ease) ? [...ease] : [ease];\n                const originalEase = [...ease];\n                for (let repeatIndex = 0; repeatIndex < repeat; repeatIndex++) {\n                    valueKeyframesAsList.push(...originalKeyframes);\n                    for (let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++) {\n                        times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));\n                        ease.push(keyframeIndex === 0\n                            ? \"linear\"\n                            : getEasingForSegment(originalEase, keyframeIndex - 1));\n                    }\n                }\n                normalizeTimes(times, repeat);\n            }\n            const targetTime = startTime + duration;\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            const subjects = resolveSubjects(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = getSubjectSequence(thisSubject, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition && transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { ObjectVisualElement } from '../../render/object/ObjectVisualElement.mjs';\n\nfunction createDOMVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options);\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\nfunction createObjectVisualElement(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = new ObjectVisualElement(options);\n    node.mount(subject);\n    visualElementStore.set(subject, node);\n}\n\nexport { createDOMVisualElement, createObjectVisualElement };\n","import { invariant } from 'motion-utils';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\n\nfunction isSingleValue(subject, keyframes) {\n    return (isMotionValue(subject) ||\n        typeof subject === \"number\" ||\n        (typeof subject === \"string\" && !isDOMKeyframes(keyframes)));\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n    const animations = [];\n    if (isSingleValue(subject, keyframes)) {\n        animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes)\n            ? keyframes.default || keyframes\n            : keyframes, options ? options.default || options : options));\n    }\n    else {\n        const subjects = resolveSubjects(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        invariant(Boolean(numSubjects), \"No valid elements provided.\");\n        for (let i = 0; i < numSubjects; i++) {\n            const thisSubject = subjects[i];\n            const createVisualElement = thisSubject instanceof Element\n                ? createDOMVisualElement\n                : createObjectVisualElement;\n            if (!visualElementStore.has(thisSubject)) {\n                createVisualElement(thisSubject);\n            }\n            const visualElement = visualElementStore.get(thisSubject);\n            const transition = { ...options };\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (\"delay\" in transition &&\n                typeof transition.delay === \"function\") {\n                transition.delay = transition.delay(i, numSubjects);\n            }\n            animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n        }\n    }\n    return animations;\n}\n\nexport { animateSubject };\n","import { spring } from '../generators/spring/index.mjs';\nimport { createAnimationsFromSequence } from '../sequence/create.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        animations.push(...animateSubject(subject, keyframes, transition));\n    });\n    return animations;\n}\n\nexport { animateSequence };\n","import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate/index.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null, // Will be hydrated by React\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n","function setCSSVar(element, name, value) {\n    element.style.setProperty(name, value);\n}\nfunction setStyle(element, name, value) {\n    element.style[name] = value;\n}\n\nexport { setCSSVar, setStyle };\n","import { memo } from 'motion-utils';\n\nconst supportsPartialKeyframes = /*@__PURE__*/ memo(() => {\n    try {\n        document.createElement(\"div\").animate({ opacity: [1] });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n});\n\nexport { supportsPartialKeyframes };\n","import { NativeAnimationControls, isGenerator, createGeneratorEasing, supportsLinearEasing } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nimport { startWaapiAnimation } from './index.mjs';\nimport { browserNumberValueTypes } from '../../../render/dom/value-types/number-browser.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { setCSSVar, setStyle } from './utils/style.mjs';\nimport { supportsPartialKeyframes } from './utils/supports-partial-keyframes.mjs';\nimport { supportsWaapi } from './utils/supports-waapi.mjs';\n\nconst state = new WeakMap();\nfunction hydrateKeyframes(valueName, keyframes, read) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? read() : keyframes[i - 1];\n        }\n        if (typeof keyframes[i] === \"number\" &&\n            browserNumberValueTypes[valueName]) {\n            keyframes[i] = browserNumberValueTypes[valueName].transform(keyframes[i]);\n        }\n    }\n    if (!supportsPartialKeyframes() && keyframes.length < 2) {\n        keyframes.unshift(read());\n    }\n}\nconst defaultEasing = \"easeOut\";\nfunction getElementAnimationState(element) {\n    const animationState = state.get(element) || new Map();\n    state.set(element, animationState);\n    return state.get(element);\n}\nclass NativeAnimation extends NativeAnimationControls {\n    constructor(element, valueName, valueKeyframes, options) {\n        const isCSSVar = valueName.startsWith(\"--\");\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"framer-motion\"?`);\n        const existingAnimation = getElementAnimationState(element).get(valueName);\n        existingAnimation && existingAnimation.stop();\n        const readInitialKeyframe = () => {\n            return valueName.startsWith(\"--\")\n                ? element.style.getPropertyValue(valueName)\n                : window.getComputedStyle(element)[valueName];\n        };\n        if (!Array.isArray(valueKeyframes)) {\n            valueKeyframes = [valueKeyframes];\n        }\n        hydrateKeyframes(valueName, valueKeyframes, readInitialKeyframe);\n        // TODO: Replace this with toString()?\n        if (isGenerator(options.type)) {\n            const generatorOptions = createGeneratorEasing(options, 100, options.type);\n            options.ease = supportsLinearEasing()\n                ? generatorOptions.ease\n                : defaultEasing;\n            options.duration = secondsToMilliseconds(generatorOptions.duration);\n            options.type = \"keyframes\";\n        }\n        else {\n            options.ease = options.ease || defaultEasing;\n        }\n        const onFinish = () => {\n            this.setValue(element, valueName, getFinalKeyframe(valueKeyframes, options));\n            this.cancel();\n            this.resolveFinishedPromise();\n        };\n        const init = () => {\n            this.setValue = isCSSVar ? setCSSVar : setStyle;\n            this.options = options;\n            this.updateFinishedPromise();\n            this.removeAnimation = () => {\n                const elementState = state.get(element);\n                elementState && elementState.delete(valueName);\n            };\n        };\n        if (!supportsWaapi()) {\n            super();\n            init();\n            onFinish();\n        }\n        else {\n            super(startWaapiAnimation(element, valueName, valueKeyframes, options));\n            init();\n            if (options.autoplay === false) {\n                this.animation.pause();\n            }\n            this.animation.onfinish = onFinish;\n            getElementAnimationState(element).set(valueName, this);\n        }\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n    play() {\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        super.play();\n    }\n    cancel() {\n        this.removeAnimation();\n        super.cancel();\n    }\n}\n\nexport { NativeAnimation };\n","import { GroupPlaybackControls } from 'motion-dom';\nimport { animateElements } from './animate-elements.mjs';\n\nconst createScopedWaapiAnimate = (scope) => {\n    function scopedAnimate(elementOrSelector, keyframes, options) {\n        return new GroupPlaybackControls(animateElements(elementOrSelector, keyframes, options, scope));\n    }\n    return scopedAnimate;\n};\nconst animateMini = /*@__PURE__*/ createScopedWaapiAnimate();\n\nexport { animateMini, createScopedWaapiAnimate };\n","import { resolveElements, getValueTransition } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nimport { NativeAnimation } from './NativeAnimation.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        const elementTransition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof elementTransition.delay === \"function\") {\n            elementTransition.delay = elementTransition.delay(i, numElements);\n        }\n        for (const valueName in keyframes) {\n            const valueKeyframes = keyframes[valueName];\n            const valueOptions = {\n                ...getValueTransition(elementTransition, valueName),\n            };\n            valueOptions.duration = valueOptions.duration\n                ? secondsToMilliseconds(valueOptions.duration)\n                : valueOptions.duration;\n            valueOptions.delay = secondsToMilliseconds(valueOptions.delay || 0);\n            animations.push(new NativeAnimation(element, valueName, valueKeyframes, valueOptions));\n        }\n    }\n    return animations;\n}\n\nexport { animateElements };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedWaapiAnimate } from '../animators/waapi/animate-style.mjs';\n\nfunction useAnimateMini() {\n    const scope = useConstant(() => ({\n        current: null, // Will be hydrated by React\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedWaapiAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimateMini };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import { useContext } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\nfunction usePresenceData() {\n    const context = useContext(PresenceContext);\n    return context ? context.custom : undefined;\n}\n\nexport { usePresenceData };\n","import { useEffect } from 'react';\nimport { addDomEvent } from './add-dom-event.mjs';\n\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { useDomEvent };\n","import { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nexport { DragControls, useDragControls };\n","import { motionComponentSymbol } from './symbol.mjs';\n\n/**\n * Checks if a component is a `motion` component.\n */\nfunction isMotionComponent(component) {\n    return (component !== null &&\n        typeof component === \"object\" &&\n        motionComponentSymbol in component);\n}\n\nexport { isMotionComponent };\n","import { isMotionComponent } from './is-motion-component.mjs';\nimport { motionComponentSymbol } from './symbol.mjs';\n\n/**\n * Unwraps a `motion` component and returns either a string for `motion.div` or\n * the React component for `motion(Component)`.\n *\n * If the component is not a `motion` component it returns undefined.\n */\nfunction unwrapMotionComponent(component) {\n    if (isMotionComponent(component)) {\n        return component[motionComponentSymbol];\n    }\n    return undefined;\n}\n\nexport { unwrapMotionComponent };\n","import { rootProjectionNode } from './node/HTMLProjectionNode.mjs';\n\nfunction useInstantLayoutTransition() {\n    return startTransition;\n}\nfunction startTransition(callback) {\n    if (!rootProjectionNode.current)\n        return;\n    rootProjectionNode.current.isUpdating = false;\n    rootProjectionNode.current.blockUpdate();\n    callback && callback();\n}\n\nexport { useInstantLayoutTransition };\n","import { useCallback } from 'react';\nimport { rootProjectionNode } from './node/HTMLProjectionNode.mjs';\n\nfunction useResetProjection() {\n    const reset = useCallback(() => {\n        const root = rootProjectionNode.current;\n        if (!root)\n            return;\n        root.resetTree();\n    }, []);\n    return reset;\n}\n\nexport { useResetProjection };\n","import { useRef, useState, useCallback } from 'react';\nimport { wrap } from './wrap.mjs';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = useRef(0);\n    const [item, setItem] = useState(items[index.current]);\n    const runCycle = useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nexport { useCycle };\n","import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","import { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    const unlockOnFrameRef = useRef(-1);\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        frame.postRender(() => frame.postRender(() => {\n            /**\n             * If the callback has been called again after the effect\n             * triggered this 2 frame delay, don't unblock animations. This\n             * prevents the previous effect from unblocking the current\n             * instant transition too soon. This becomes more likely when\n             * used in conjunction with React.startTransition().\n             */\n            if (forcedRenderCount !== unlockOnFrameRef.current)\n                return;\n            instantAnimationState.current = false;\n        }));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n            unlockOnFrameRef.current = forcedRenderCount + 1;\n        });\n    };\n}\nfunction disableInstantTransitions() {\n    instantAnimationState.current = false;\n}\n\nexport { disableInstantTransitions, useInstantTransition };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst appearStoreId = (elementId, valueName) => {\n    const key = transformProps.has(valueName) ? \"transform\" : valueName;\n    return `${elementId}: ${key}`;\n};\n\nexport { appearStoreId };\n","const appearAnimationStore = new Map();\nconst appearComplete = new Map();\n\nexport { appearAnimationStore, appearComplete };\n","import { appearAnimationStore } from './store.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(elementId, valueName, frame) {\n    var _a;\n    const storeId = appearStoreId(elementId, valueName);\n    const optimisedAnimation = appearAnimationStore.get(storeId);\n    if (!optimisedAnimation) {\n        return null;\n    }\n    const { animation, startTime } = optimisedAnimation;\n    function cancelAnimation() {\n        var _a;\n        (_a = window.MotionCancelOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, elementId, valueName, frame);\n    }\n    /**\n     * We can cancel the animation once it's finished now that we've synced\n     * with Motion.\n     *\n     * Prefer onfinish over finished as onfinish is backwards compatible with\n     * older browsers.\n     */\n    animation.onfinish = cancelAnimation;\n    if (startTime === null || ((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, elementId))) {\n        /**\n         * If the startTime is null, this animation is the Paint Ready detection animation\n         * and we can cancel it immediately without handoff.\n         *\n         * Or if we've already handed off the animation then we're now interrupting it.\n         * In which case we need to cancel it.\n         */\n        cancelAnimation();\n        return null;\n    }\n    else {\n        return startTime;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { appearStoreId } from './store-id.mjs';\nimport { startWaapiAnimation } from '../animators/waapi/index.mjs';\nimport { optimizedAppearDataId } from './data-id.mjs';\nimport { handoffOptimizedAppearAnimation } from './handoff.mjs';\nimport { appearAnimationStore, appearComplete } from './store.mjs';\nimport { noop } from 'motion-utils';\nimport { getOptimisedAppearId } from './get-appear-id.mjs';\n\n/**\n * A single time to use across all animations to manually set startTime\n * and ensure they're all in sync.\n */\nlet startFrameTime;\n/**\n * A dummy animation to detect when Chrome is ready to start\n * painting the page and hold off from triggering the real animation\n * until then. We only need one animation to detect paint ready.\n *\n * https://bugs.chromium.org/p/chromium/issues/detail?id=1406850\n */\nlet readyAnimation;\n/**\n * Keep track of animations that were suspended vs cancelled so we\n * can easily resume them when we're done measuring layout.\n */\nconst suspendedAnimations = new Set();\nfunction resumeSuspendedAnimations() {\n    suspendedAnimations.forEach((data) => {\n        data.animation.play();\n        data.animation.startTime = data.startTime;\n    });\n    suspendedAnimations.clear();\n}\nfunction startOptimizedAppearAnimation(element, name, keyframes, options, onReady) {\n    // Prevent optimised appear animations if Motion has already started animating.\n    if (window.MotionIsMounted) {\n        return;\n    }\n    const id = element.dataset[optimizedAppearDataId];\n    if (!id)\n        return;\n    window.MotionHandoffAnimation = handoffOptimizedAppearAnimation;\n    const storeId = appearStoreId(id, name);\n    if (!readyAnimation) {\n        readyAnimation = startWaapiAnimation(element, name, [keyframes[0], keyframes[0]], \n        /**\n         * 10 secs is basically just a super-safe duration to give Chrome\n         * long enough to get the animation ready.\n         */\n        { duration: 10000, ease: \"linear\" });\n        appearAnimationStore.set(storeId, {\n            animation: readyAnimation,\n            startTime: null,\n        });\n        /**\n         * If there's no readyAnimation then there's been no instantiation\n         * of handoff animations.\n         */\n        window.MotionHandoffAnimation = handoffOptimizedAppearAnimation;\n        window.MotionHasOptimisedAnimation = (elementId, valueName) => {\n            if (!elementId)\n                return false;\n            /**\n             * Keep a map of elementIds that have started animating. We check\n             * via ID instead of Element because of hydration errors and\n             * pre-hydration checks. We also actively record IDs as they start\n             * animating rather than simply checking for data-appear-id as\n             * this attrbute might be present but not lead to an animation, for\n             * instance if the element's appear animation is on a different\n             * breakpoint.\n             */\n            if (!valueName) {\n                return appearComplete.has(elementId);\n            }\n            const animationId = appearStoreId(elementId, valueName);\n            return Boolean(appearAnimationStore.get(animationId));\n        };\n        window.MotionHandoffMarkAsComplete = (elementId) => {\n            if (appearComplete.has(elementId)) {\n                appearComplete.set(elementId, true);\n            }\n        };\n        window.MotionHandoffIsComplete = (elementId) => {\n            return appearComplete.get(elementId) === true;\n        };\n        /**\n         * We only need to cancel transform animations as\n         * they're the ones that will interfere with the\n         * layout animation measurements.\n         */\n        window.MotionCancelOptimisedAnimation = (elementId, valueName, frame, canResume) => {\n            const animationId = appearStoreId(elementId, valueName);\n            const data = appearAnimationStore.get(animationId);\n            if (!data)\n                return;\n            if (frame && canResume === undefined) {\n                /**\n                 * Wait until the end of the subsequent frame to cancel the animation\n                 * to ensure we don't remove the animation before the main thread has\n                 * had a chance to resolve keyframes and render.\n                 */\n                frame.postRender(() => {\n                    frame.postRender(() => {\n                        data.animation.cancel();\n                    });\n                });\n            }\n            else {\n                data.animation.cancel();\n            }\n            if (frame && canResume) {\n                suspendedAnimations.add(data);\n                frame.render(resumeSuspendedAnimations);\n            }\n            else {\n                appearAnimationStore.delete(animationId);\n                /**\n                 * If there are no more animations left, we can remove the cancel function.\n                 * This will let us know when we can stop checking for conflicting layout animations.\n                 */\n                if (!appearAnimationStore.size) {\n                    window.MotionCancelOptimisedAnimation = undefined;\n                }\n            }\n        };\n        window.MotionCheckAppearSync = (visualElement, valueName, value) => {\n            var _a, _b;\n            const appearId = getOptimisedAppearId(visualElement);\n            if (!appearId)\n                return;\n            const valueIsOptimised = (_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, appearId, valueName);\n            const externalAnimationValue = (_b = visualElement.props.values) === null || _b === void 0 ? void 0 : _b[valueName];\n            if (!valueIsOptimised || !externalAnimationValue)\n                return;\n            const removeSyncCheck = value.on(\"change\", (latestValue) => {\n                var _a;\n                if (externalAnimationValue.get() !== latestValue) {\n                    (_a = window.MotionCancelOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, appearId, valueName);\n                    removeSyncCheck();\n                }\n            });\n            return removeSyncCheck;\n        };\n    }\n    const startAnimation = () => {\n        readyAnimation.cancel();\n        const appearAnimation = startWaapiAnimation(element, name, keyframes, options);\n        /**\n         * Record the time of the first started animation. We call performance.now() once\n         * here and once in handoff to ensure we're getting\n         * close to a frame-locked time. This keeps all animations in sync.\n         */\n        if (startFrameTime === undefined) {\n            startFrameTime = performance.now();\n        }\n        appearAnimation.startTime = startFrameTime;\n        appearAnimationStore.set(storeId, {\n            animation: appearAnimation,\n            startTime: startFrameTime,\n        });\n        if (onReady)\n            onReady(appearAnimation);\n    };\n    appearComplete.set(id, false);\n    if (readyAnimation.ready) {\n        readyAnimation.ready.then(startAnimation).catch(noop);\n    }\n    else {\n        startAnimation();\n    }\n}\n\nexport { startOptimizedAppearAnimation };\n","import { useState, useLayoutEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.measureInstanceViewportBox = createBox;\n    }\n    build() { }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({\n            props: {\n                onUpdate: (v) => {\n                    setAnimationState({ ...v });\n                },\n            },\n            visualState,\n            presenceContext: null,\n        }, { initialState });\n    });\n    useLayoutEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n","import { jsx } from 'react/jsx-runtime';\nimport { invariant } from 'motion-utils';\nimport * as React from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { LayoutGroup } from './LayoutGroup/index.mjs';\n\nlet id = 0;\nconst AnimateSharedLayout = ({ children }) => {\n    React.useEffect(() => {\n        invariant(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n    }, []);\n    return (jsx(LayoutGroup, { id: useConstant(() => `asl-${id++}`), children: children }));\n};\n\nexport { AnimateSharedLayout };\n","import { useTransform } from './use-transform.mjs';\nimport { invariant, warning } from 'motion-utils';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useContext } from 'react';\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nconst maxScale = 100000;\nconst invertScale = (scale) => scale > 0.001 ? 1 / scale : maxScale;\nlet hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\nfunction useInvertedScale(scale) {\n    let parentScaleX = useMotionValue(1);\n    let parentScaleY = useMotionValue(1);\n    const { visualElement } = useContext(MotionContext);\n    invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    const scaleX = useTransform(parentScaleX, invertScale);\n    const scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX, scaleY };\n}\n\nexport { invertScale, useInvertedScale };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { invariant } from 'motion-utils';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/components/motion/proxy.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroupComponent({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion[as]);\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            // If the entry was already added, update it rather than adding it again\n            const idx = order.findIndex((entry) => value === entry.value);\n            if (idx !== -1) {\n                order[idx].layout = layout[axis];\n            }\n            else {\n                order.push({ value: value, layout: layout[axis] });\n            }\n            order.sort(compareMin);\n        },\n        updateOrder: (item, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, item, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (jsx(Component, { ...props, ref: externalRef, ignoreStrict: true, children: jsx(ReorderContext.Provider, { value: context, children: children }) }));\n}\nconst ReorderGroup = /*@__PURE__*/ forwardRef(ReorderGroupComponent);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { ReorderGroup, ReorderGroupComponent };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mixNumber(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/components/motion/proxy.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItemComponent({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion[as]);\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    return (jsx(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => registerItem(value, measured), ref: externalRef, ignoreStrict: true, children: children }));\n}\nconst ReorderItem = /*@__PURE__*/ forwardRef(ReorderItemComponent);\n\nexport { ReorderItem, ReorderItemComponent };\n","import { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\n\nfunction getOriginIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction stagger(duration = 0.1, { startDelay = 0, from = 0, ease } = {}) {\n    return (i, total) => {\n        const fromIndex = typeof from === \"number\" ? from : getOriginIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (ease) {\n            const maxDelay = total * duration;\n            const easingFunction = easingDefinitionToFunction(ease);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return startDelay + delay;\n    };\n}\n\nexport { getOriginIndex, stagger };\n","import { stepsOrder } from './order.mjs';\nimport { frame, cancelFrame } from './frame.mjs';\n\n/**\n * @deprecated\n *\n * Import as `frame` instead.\n */\nconst sync = frame;\n/**\n * @deprecated\n *\n * Use cancelFrame(callback) instead.\n */\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = (process) => cancelFrame(process);\n    return acc;\n}, {});\n\nexport { cancelSync, sync };\n","import { clamp } from '../utils/clamp.mjs';\n\nfunction steps(numSteps, direction = \"end\") {\n    return (progress) => {\n        progress =\n            direction === \"end\"\n                ? Math.min(progress, 0.999)\n                : Math.max(progress, 0.001);\n        const expanded = progress * numSteps;\n        const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / numSteps);\n    };\n}\n\nexport { steps };\n"],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","DeprecatedLayoutGroupContext","createContext","useForceUpdate","isMounted","useIsMounted","forcedRenderCount","setForcedRenderCount","postRender","notify","node","isLayoutDirty","willUpdate","nodeGroup","nodes","Set","subscriptions","WeakMap","dirtyAll","add","addEventListener","remove","unsubscribe","dirty","shouldInheritGroup","inherit","LayoutGroup","layoutGroupContext","deprecatedLayoutGroupContext","upstreamId","shouldInheritId","group","memoizedContext","LazyMotion","features","strict","setIsLoaded","isLazyBundle","loadedRenderer","renderer","loadedFeatures","useEffect","then","LazyContext","MotionConfig","isValidProp","config","isStatic","JSON","stringify","transition","transformPagePoint","reducedMotion","createMinimalMotionComponent","m","domAnimation","animations","domMax","drag","layout","domMin","useMotionValueEvent","event","callback","on","observeTimeline","update","timeline","prevProgress","onFrame","currentTime","progress","resizeHandlers","observer","notifyTarget","target","contentRect","borderBoxSize","_a","handler","contentSize","inlineSize","blockSize","SVGElement","getBBox","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elements","elementHandlers","observe","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","window","innerWidth","innerHeight","info","maxElapsed","createScrollInfo","time","offset","scrollLength","targetOffset","targetLength","containerLength","velocity","y","keys","position","updateAxisInfo","axisName","axis","prev","prevTime","elapsed","namedEdges","start","center","end","resolveEdge","edge","inset","delta","asNumber","parseFloat","endsWith","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","Array","isArray","targetPoint","containerPoint","trim","split","ScrollOffset","Enter","Exit","Any","All","point","resolveOffsets","container","options","lengthLabel","tagName","svgBoundingBox","getBoundingClientRect","parentElement","parentBoundingBox","SVGGraphicsElement","svg","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","getTargetSize","containerSize","hasChanged","interpolate","numOffsets","interpolatorOffsets","clamp","createOnScrollHandler","onScroll","measure","updateScrollInfo","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","measureAll","updateAll","timestamp","listener","read","passive","b","a","currentHandlers","scrollListener","removeEventListener","timelineCache","getTimeline","source","elementCache","ScrollTimeline","cancel","scrollTimelineFallback","needsElementTracking","optionsWithDefaults","isOnScrollWithInfo","scrollFunction","animation","flatten","pause","duration","attachTimeline","valueAnimation","noop","scrollAnimation","refWarning","name","Boolean","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","useScroll","layoutEffect","_progress","useElementScroll","useViewportScroll","useMotionValue","setLatest","useCombineMotionValues","combineValues","updateValue","scheduleUpdate","preRender","v","useMotionTemplate","fragments","numFragments","filter","output","useSpring","activeSpringAnimation","initialValue","unit","replace","latestValue","latestSetter","startAnimation","stopAnimation","keyframes","getVelocity","type","restDelta","restSpeed","onUpdate","stop","attach","latest","parseValue","useAnimationFrame","initialTimestamp","provideTimeSinceStart","useTime","t","getMixer","mix","isCustomValueType","transform","args","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","mixer","useTransform","input","inputRangeOrTransformer","compute","useComputed","transformer","useListTransform","numValues","useVelocity","updateVelocity","WillChangeMotionValue","constructor","super","arguments","styleName","getWillChangeName","useWillChange","useReducedMotion","shouldReduceMotion","useReducedMotionConfig","reducedMotionPreference","setVariants","visualElement","variantLabels","reverse","variant","getVariant","variantChildren","animationControls","hasMounted","subscribers","controls","subscribe","definition","transitionOverride","Promise","all","setValues","mount","useUnmountEffect","wrap","min","max","rangeSize","getEasingForSegment","easing","isDOMKeyframes","resolveSubjects","subject","scope","selectorCache","NodeList","from","calculateRepeatDuration","repeat","_repeatDelay","calcNextTime","next","labels","startsWith","addKeyframes","sequence","startTime","endTime","keyframe","at","eraseKeyframes","normalizeTimes","times","compareByTime","defaultSegmentEasing","MAX_REPEAT","getSubjectSequence","sequences","getValueSequence","keyframesAsList","getValueTransition","isNumber","isNumberKeyframesArray","every","ObjectVisualElement","VisualElement","readValueFromInstance","instance","object","isObjectKey","getBaseTargetFromProps","removeValueFromRenderState","renderState","measureInstanceViewportBox","build","latestValues","Object","assign","renderInstance","sortInstanceNodePosition","createDOMVisualElement","presenceContext","visualState","transformOrigin","vars","attrs","SVGVisualElement","HTMLVisualElement","createObjectVisualElement","animateSubject","isSingleValue","default","subjects","numSubjects","thisSubject","createVisualElement","Element","delay","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","generators","defaultDuration","timeLabels","totalDuration","segment","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","repeatType","repeatDelay","remainingTransition","ease","calculatedDelay","numKeyframes","createGenerator","absoluteDelta","abs","springTransition","springEasing","remainder","fill","f","unshift","originalKeyframes","originalTimes","originalEase","repeatIndex","keyframeIndex","targetTime","subjectIndex","subjectSequence","valueSequences","sort","valueOffset","valueEasing","createAnimationsFromSequence","spring","createScopedAnimate","subjectOrSequence","optionsOrKeyframes","some","animate","useAnimate","setCSSVar","setProperty","setStyle","supportsPartialKeyframes","opacity","e","defaultEasing","getElementAnimationState","animationState","NativeAnimation","valueName","isCSSVar","existingAnimation","hydrateKeyframes","getPropertyValue","getComputedStyle","generatorOptions","onFinish","setValue","resolveFinishedPromise","init","updateFinishedPromise","removeAnimation","elementState","autoplay","onfinish","resolve","reject","currentFinishedPromise","play","state","createScopedWaapiAnimate","elementOrSelector","numElements","elementTransition","valueOptions","animateElements","animateMini","useAnimateMini","useAnimationControls","useAnimation","usePresenceData","useDomEvent","eventName","DragControls","componentControls","nativeEvent","createDragControls","useDragControls","isMotionComponent","component","unwrapMotionComponent","useInstantLayoutTransition","startTransition","isUpdating","blockUpdate","useResetProjection","root","resetTree","useCycle","items","index","item","setItem","thresholds","inView","onStart","margin","rootMargin","amount","activeIntersections","IntersectionObserver","entry","onEnd","isIntersecting","newOnEnd","threshold","disconnect","useInView","once","isInView","setInView","useInstantTransition","forceUpdate","startInstantLayoutTransition","unlockOnFrameRef","disableInstantTransitions","appearStoreId","elementId","appearAnimationStore","appearComplete","handoffOptimizedAppearAnimation","frame","storeId","optimisedAnimation","cancelAnimation","MotionCancelOptimisedAnimation","call","MotionHandoffIsComplete","startFrameTime","readyAnimation","suspendedAnimations","resumeSuspendedAnimations","data","clear","startOptimizedAppearAnimation","onReady","MotionIsMounted","MotionHandoffAnimation","MotionHasOptimisedAnimation","animationId","MotionHandoffMarkAsComplete","canResume","MotionCheckAppearSync","_b","appearId","valueIsOptimised","externalAnimationValue","removeSyncCheck","appearAnimation","performance","now","ready","catch","createObject","StateVisualElement","resetTransform","restoreTransform","scrapeMotionValuesFromProps","_state","initialState","useVisualState","createRenderState","useAnimatedState","setAnimationState","useLayoutEffect","unmount","animationDefinition","AnimateSharedLayout","invertScale","scale","hasWarned","useInvertedScale","parentScaleX","parentScaleY","MotionContext","scaleX","scaleY","getValue","ReorderContext","ReorderGroupComponent","as","onReorder","externalRef","Component","order","isReordering","registerItem","idx","findIndex","compareMin","updateOrder","newOrder","nextOffset","nextItem","nextLayout","nextItemCenter","checkReorder","indexOf","ignoreStrict","ReorderGroup","forwardRef","useDefaultMotionValue","defaultValue","ReorderItemComponent","onDrag","zIndex","latestX","latestY","dragSnapToOrigin","gesturePoint","onLayoutMeasure","measured","ReorderItem","stagger","startDelay","total","fromIndex","lastIndex","getOriginIndex","distance","maxDelay","easingFunction","sync","cancelSync","reduce","acc","process","steps","numSteps","direction","expanded","rounded","floor","ceil"],"sourceRoot":""}