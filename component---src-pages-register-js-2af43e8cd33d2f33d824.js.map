{"version":3,"file":"component---src-pages-register-js-2af43e8cd33d2f33d824.js","mappings":"uLA+DA,UAxDyBA,KACvB,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,YAqBtBC,EAAWF,EAAKG,SAASC,MAAM,GAC/BC,EAAYL,EAAKM,MAAMF,MAAM,GAEnC,OACEG,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACC,OAAOV,aAAQ,EAARA,EAAUU,QAAS,kBAC/BF,EAAAA,EAAAA,GAACG,EAAAA,GAAG,CAACC,GAAI,CAAEC,EAAG,GAAIN,UAChBF,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,QAAS,CAAC,EAAG,EAAG,WAAYC,IAAK,EAAET,SAAA,EAEvCF,EAAAA,EAAAA,IAACM,EAAAA,GAAG,CAAAJ,SAAA,EACFC,EAAAA,EAAAA,GAACS,EAAAA,GAAO,CAACC,GAAG,KAAKN,GAAI,CAAEO,GAAI,GAAIZ,UAAEP,aAAQ,EAARA,EAAUU,QAAS,kBACpDF,EAAAA,EAAAA,GAACG,EAAAA,GAAG,CAACC,GAAI,CACP,OAAQ,CAAEQ,SAAU,GACpB,OAAQ,CAAEA,SAAU,GACpB,MAAO,CAAEA,SAAU,EAAGC,WAAY,SAClCd,SACCP,GAAWsB,EAAAA,EAAAA,GAA0BC,KAAKC,MAAMxB,EAASyB,QAAQC,OAAQlB,EAAAA,EAAAA,GAAA,KAAAD,SAAG,yCAKjFC,EAAAA,EAAAA,GAACG,EAAAA,GAAG,CAACC,GAAI,CAAEe,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWtB,SAC1EJ,GACCK,EAAAA,EAAAA,GAACsB,EAAAA,GAAK,CAACC,IAAK5B,EAAU6B,KAAKC,IAAKC,IAAK/B,EAAUgC,aAAe,qBAAsBvB,GAAI,CAAEwB,SAAU,OAAQC,OAAQ,OAAQC,aAAc,MAE1I9B,EAAAA,EAAAA,GAAA,KAAAD,SAAG,6BAKV,C","sources":["webpack://icn-australia/./src/pages/register.js"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Box, Heading, Image, Grid } from \"theme-ui\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport Seo from '../components/seo';\n\nconst RegistrationPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      longText: allContentfulLongText(filter: { title: { eq: \"Registration\" } }) {\n        nodes {\n          title\n          content {\n            raw\n          }\n        }\n      }\n      image: allContentfulAsset(filter: { title: { eq: \"rego\" } }) {\n        nodes {\n          file {\n            url\n          }\n          description\n        }\n      }\n    }\n  `);\n\n  const textNode = data.longText.nodes[0];\n  const imageNode = data.image.nodes[0];\n\n  return (\n    <>\n      <Seo title={textNode?.title || \"Registration\"} />\n      <Box sx={{ p: 4 }}>\n        <Grid columns={[1, 2, \"2fr 1fr\"]} gap={4}>\n          {/* Left Side - Rich Text Content */}\n          <Box>\n            <Heading as=\"h1\" sx={{ mb: 3 }}>{textNode?.title || \"Registration\"}</Heading>\n            <Box sx={{\n              '& h1': { fontSize: 5 },\n              '& h2': { fontSize: 4 },\n              '& p': { fontSize: 2, lineHeight: 'body' }\n            }}>\n              {textNode ? documentToReactComponents(JSON.parse(textNode.content.raw)) : <p>No registration content found.</p>}\n            </Box>\n          </Box>\n\n          {/* Right Side - Image */}\n          <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            {imageNode ? (\n              <Image src={imageNode.file.url} alt={imageNode.description || \"Registration Image\"} sx={{ maxWidth: \"100%\", height: \"auto\", borderRadius: 4 }} />\n            ) : (\n              <p>No image found.</p>\n            )}\n          </Box>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationPage","data","useStaticQuery","textNode","longText","nodes","imageNode","image","_jsxs","_Fragment","children","_jsx","Seo","title","Box","sx","p","Grid","columns","gap","Heading","as","mb","fontSize","lineHeight","documentToReactComponents","JSON","parse","content","raw","display","justifyContent","alignItems","Image","src","file","url","alt","description","maxWidth","height","borderRadius"],"sourceRoot":""}