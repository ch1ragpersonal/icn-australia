{"version":3,"file":"component---src-pages-results-js-92124234644401521c1e.js","mappings":"uLAmIA,UA7HoBA,KAClB,MAcMC,GAdOC,EAAAA,EAAAA,IAAe,cAcPC,gCAAgCC,OAC/C,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,EAACC,EAAgB,EAACC,IAAsBF,EAAAA,EAAAA,UAASN,IAEvDS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAsBN,EAAWO,cACjCC,EAAqBZ,EAAQa,QAAQC,GAEvCA,EAAOC,gBAAgBJ,cAAcK,SAASN,IAC7CI,EAAOd,SACNc,EAAOd,QAAQA,QAAQW,cAAcK,SAASN,KAGpDF,EAAmBI,EAAmB,GACrC,CAACR,EAAYJ,IAGhB,MAaMiB,EAbsBC,KAC1B,MAAMC,EAAU,CAAC,EASjB,OARAD,EAAeE,SAASN,IACtB,IAAKA,EAAOO,KAAM,OAClB,MAAMC,EAAO,IAAIC,KAAKT,EAAOO,MAAMG,cAC9BL,EAAQG,KACXH,EAAQG,GAAQ,IAElBH,EAAQG,GAAMG,KAAKX,EAAO,IAErBK,CAAO,EAGeO,CAAmBnB,GAElD,OACEoB,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CACFC,GAAI,CACFC,MAAO,OACPC,SAAU,SACVC,OAAQ,SACRC,QAAS,QACTC,SAAA,EAEFC,EAAAA,EAAAA,GAACC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,OAAQC,aAAc,OAAQC,UAAW,UAAWN,SAAC,yBAKtFC,EAAAA,EAAAA,GAACM,EAAAA,GAAI,CAACZ,GAAI,CAAEa,eAAgB,SAAUC,GAAI,GAAIT,UAC5CC,EAAAA,EAAAA,GAACS,EAAAA,GAAK,CACJC,KAAK,OACLC,YAAY,2CACZC,MAAO3C,EACP4C,SAAWC,GAAM5C,EAAc4C,EAAEC,OAAOH,OACxClB,GAAI,CACFE,SAAU,QACVE,QAAS,OACTkB,aAAc,MACdC,OAAQ,uBAMdjB,EAAAA,EAAAA,GAACP,EAAAA,GAAG,CAAAM,SACDmB,OAAOC,KAAKrC,GACVsC,MAAK,CAACC,EAAGC,IAAMA,EAAID,IACnBE,KAAKpC,IACJK,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CAAYC,GAAI,CAAEU,aAAc,QAASL,SAAA,EAC3CC,EAAAA,EAAAA,GAACC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,OAAQC,aAAc,QAASL,SAC7DZ,KAEHa,EAAAA,EAAAA,GAACP,EAAAA,GAAG,CACFC,GAAI,CACF8B,QAAS,OACTC,oBAAqB,uCACrBC,IAAK,QACL3B,SAEDjB,EAAuBK,GAAMoC,KAAI,CAAC5C,EAAQgD,KACzCnC,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CAEFC,GAAI,CACFuB,OAAQ,iBACRnB,QAAS,OACTkB,aAAc,MACdY,UAAW,4BACXC,gBAAiB,SACjB9B,SAAA,EAEFC,EAAAA,EAAAA,GAACC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,OAAQC,aAAc,QAASL,SAC7DpB,EAAOC,mBAEVoB,EAAAA,EAAAA,GAAC8B,EAAAA,GAAI,CAACpC,GAAI,CAAEU,aAAc,OAAQL,SAC/BpB,EAAOO,MAAO6C,EAAAA,EAAAA,GAAO,IAAI3C,KAAKT,EAAOO,MAAO,iBAAmB,wBAElEc,EAAAA,EAAAA,GAAC8B,EAAAA,GAAI,CAAA/B,SAAEpB,EAAOd,QAAQA,YAfjB8D,SAbHxC,OAmCa,IAA3Bf,EAAgB4D,SACZhC,EAAAA,EAAAA,GAAC8B,EAAAA,GAAI,CAACpC,GAAI,CAAEW,UAAW,SAAU4B,UAAW,QAASlC,SAAC,6CAIxD,C","sources":["webpack://icn-australia/./src/pages/results.js"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport React, { useState, useEffect } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Box, Heading, Input, Flex, Text } from \"theme-ui\";\nimport { format } from \"date-fns\";\n\nconst ResultsPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulCompetitionResults(sort: { date: DESC }) {\n        nodes {\n          competitionName\n          results {\n            results\n          }\n          date\n        }\n      }\n    }\n  `);\n\n  const results = data.allContentfulCompetitionResults.nodes;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState(results);\n\n  useEffect(() => {\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\n    const newFilteredResults = results.filter((result) => {\n      return (\n        result.competitionName.toLowerCase().includes(lowerCaseSearchTerm) ||\n        (result.results &&\n          result.results.results.toLowerCase().includes(lowerCaseSearchTerm))\n      );\n    });\n    setFilteredResults(newFilteredResults);\n  }, [searchTerm, results]);\n\n  // Group results by year\n  const groupResultsByYear = (resultsToGroup) => {\n    const grouped = {};\n    resultsToGroup.forEach((result) => {\n      if (!result.date) return; // Skip results with no date\n      const year = new Date(result.date).getFullYear();\n      if (!grouped[year]) {\n        grouped[year] = [];\n      }\n      grouped[year].push(result);\n    });\n    return grouped;\n  };\n\n  const groupedFilteredResults = groupResultsByYear(filteredResults);\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        maxWidth: \"1200px\",\n        margin: \"0 auto\",\n        padding: \"20px\",\n      }}\n    >\n      <Heading as=\"h1\" sx={{ fontSize: \"32px\", marginBottom: \"20px\", textAlign: \"center\" }}>\n        Competition Results\n      </Heading>\n\n      {/* Search Input */}\n      <Flex sx={{ justifyContent: \"center\", mb: 4 }}>\n        <Input\n          type=\"text\"\n          placeholder=\"Search by competition name or results...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          sx={{\n            maxWidth: \"400px\", // Limit width for better aesthetics\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\",\n          }}\n        />\n      </Flex>\n\n      {/* Results Grid */}\n      <Box>\n        {Object.keys(groupedFilteredResults)\n          .sort((a, b) => b - a) // Sort years in descending order\n          .map((year) => (\n            <Box key={year} sx={{ marginBottom: \"40px\" }}>\n              <Heading as=\"h2\" sx={{ fontSize: \"24px\", marginBottom: \"10px\" }}>\n                {year}\n              </Heading>\n              <Box\n                sx={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n                  gap: \"20px\",\n                }}\n              >\n                {groupedFilteredResults[year].map((result, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      border: \"1px solid #eee\",\n                      padding: \"20px\",\n                      borderRadius: \"8px\",\n                      boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                      backgroundColor: \"white\"\n                    }}\n                  >\n                    <Heading as=\"h3\" sx={{ fontSize: \"18px\", marginBottom: \"10px\" }}>\n                      {result.competitionName}\n                    </Heading>\n                    <Text sx={{ marginBottom: \"5px\" }}>\n                      {result.date ? format(new Date(result.date), \"MMMM dd, yyyy\") : \"Date Not Available\"}\n                    </Text>\n                    <Text>{result.results.results}</Text>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          ))}\n      </Box>\n       {filteredResults.length === 0 && (\n            <Text sx={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                No results found matching your search.\n            </Text>\n        )}\n    </Box>\n  );\n};\n\nexport default ResultsPage;"],"names":["ResultsPage","results","useStaticQuery","allContentfulCompetitionResults","nodes","searchTerm","setSearchTerm","useState","filteredResults","setFilteredResults","useEffect","lowerCaseSearchTerm","toLowerCase","newFilteredResults","filter","result","competitionName","includes","groupedFilteredResults","resultsToGroup","grouped","forEach","date","year","Date","getFullYear","push","groupResultsByYear","_jsxs","Box","sx","width","maxWidth","margin","padding","children","_jsx","Heading","as","fontSize","marginBottom","textAlign","Flex","justifyContent","mb","Input","type","placeholder","value","onChange","e","target","borderRadius","border","Object","keys","sort","a","b","map","display","gridTemplateColumns","gap","index","boxShadow","backgroundColor","Text","format","length","marginTop"],"sourceRoot":""}