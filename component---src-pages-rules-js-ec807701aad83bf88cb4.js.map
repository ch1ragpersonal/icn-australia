{"version":3,"file":"component---src-pages-rules-js-ec807701aad83bf88cb4.js","mappings":"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","sources":["webpack://icn-australia/./src/components/SecondaryButton.js","webpack://icn-australia/./src/pages/rules.js"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Button } from \"theme-ui\";\n\nconst SecondaryButton = ({ text, to }) => {\n  // This function opens external links or PDFs in a new tab.\n  const handleClick = () => {\n    if (to) {\n      window.open(to, \"_blank\", \"noopener,noreferrer\");\n    }\n  };\n\n  // Create the styled button.\n  const button = (\n    <Button\n      sx={{\n        mt: 3,\n        background: \"whiteBack\",\n        color: \"buttontext\",\n        fontSize: \"16px\",\n        borderRadius: \"8px\",\n        border: \"2px solid #004225\",\n        px: 4,\n        py: 2,\n        cursor: \"pointer\",\n        fontWeight: \"bold\",\n        transition: \"background-color 0.3s ease-in-out\",\n        \"&:hover\": {\n          backgroundColor: \"buttonback\",\n        },\n      }}\n      // If the URL is external (or a PDF), assign the onClick handler.\n      onClick={\n        to && (to.startsWith(\"http\") || to.endsWith(\".pdf\"))\n          ? handleClick\n          : undefined\n      }\n    >\n      {text}\n    </Button>\n  );\n\n  // For internal links, wrap the button in a Gatsby Link.\n  if (to && !to.startsWith(\"http\") && !to.endsWith(\".pdf\")) {\n    return (\n      <Link to={to} sx={{ textDecoration: \"none\" }}>\n        {button}\n      </Link>\n    );\n  }\n\n  // For external links/PDFs or if no \"to\" is provided, just return the button.\n  return button;\n};\n\nexport default SecondaryButton;\n","/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Box, Heading } from \"theme-ui\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport Seo from '../components/seo';\nimport SecondaryButton from \"../components/SecondaryButton\";\n\nconst RulesPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulLongText(filter: { title: { eq: \"Rules\" } }) {\n        nodes {\n          title\n          content {\n            raw\n          }\n        }\n      }\n      allContentfulPdfInfo {\n        nodes {\n          title\n          pdf {\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  // Handle the case where no matching content is found.\n  if (!data.allContentfulLongText.nodes || data.allContentfulLongText.nodes.length === 0) {\n    return (\n      <Box sx={{ p: 4 }}>\n        <Heading as=\"h1\">Rules</Heading>\n        <p>No rules and regulations found.</p>\n      </Box>\n    );\n  }\n\n  const { title, content } = data.allContentfulLongText.nodes[0];\n\n  // Get PDF links from Contentful\n  const pdfNodes = data.allContentfulPdfInfo.nodes;\n  const antiDopingPdf = pdfNodes.find(node => node.title === \"Anti Doping Policy\");\n  const therapeuticPdf = pdfNodes.find(node => node.title === \"Therapeutic Use\");\n\n  return (\n    <>\n      <Seo title={title} />\n      <Box sx={{ p: 4 }}>\n        <Heading as=\"h1\" sx={{ mb: 4 }}>{title}</Heading>\n\n        <Box\n          sx={{\n            '& h1': { fontSize: 5 },\n            '& h2': { fontSize: 4 },\n            '& p':  { fontSize: 2, lineHeight: 'body' }\n          }}\n        >\n          {documentToReactComponents(JSON.parse(content.raw))}\n        </Box>\n\n        <Box sx={{ mt: '50px' }}>\n          <Heading as=\"h2\" sx={{ mb: 4, textAlign: \"center\" }}>\n            Drug Testing Quick Links:\n          </Heading>\n          <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '1rem',\n              justifyContent: 'space-evenly'\n            }}\n          >\n            <SecondaryButton\n              text=\"Anti Doping Policy\"\n              to={antiDopingPdf?.pdf?.file?.url}\n            />\n            <SecondaryButton\n              text=\"Therapeutic Use\"\n              to={therapeuticPdf?.pdf?.file?.url}\n            />\n            <SecondaryButton to={'https://www.icompetenatural.com/report-cheating'} text=\"Report Cheating\" />\n            <SecondaryButton to={'https://www.globaldro.com/AU/search'} text=\"Check your Substance\" />\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default RulesPage;\n"],"names":["_ref","text","to","button","_jsx","Button","sx","mt","background","color","fontSize","borderRadius","border","px","py","cursor","fontWeight","transition","backgroundColor","onClick","startsWith","endsWith","handleClick","window","open","undefined","children","Link","textDecoration","RulesPage","_antiDopingPdf$pdf","_antiDopingPdf$pdf$fi","_therapeuticPdf$pdf","_therapeuticPdf$pdf$f","data","useStaticQuery","allContentfulLongText","nodes","length","_jsxs","Box","p","Heading","as","title","content","pdfNodes","allContentfulPdfInfo","antiDopingPdf","find","node","therapeuticPdf","_Fragment","Seo","mb","lineHeight","documentToReactComponents","JSON","parse","raw","textAlign","display","flexWrap","gap","justifyContent","SecondaryButton","pdf","file","url"],"sourceRoot":""}